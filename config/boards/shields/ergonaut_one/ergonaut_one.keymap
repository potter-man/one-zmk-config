#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3
#define CON 4

&lt {
    quick-tap-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    };

    behaviors {
        mtb: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_bspc {
            layers = <DEF>;
            key-positions = <10 11>;
            bindings = <&kp BSPC>;
        };
        combo_ret {
            layers = <DEF>;
            key-positions = <22 23>;
            bindings = <&kp RET>;
        };
        combo_con_layer_l {
            layers = <DEF>;
            key-positions = <36 37 38>;
            bindings = <&mo CON>;
        };
        combo_con_layer_r {
            layers = <DEF>;
            key-positions = <39 40 41>;
            bindings = <&mo CON>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp GRAVE     &kp Q         &kp W         &kp E         &kp R         &kp T         &kp Y         &kp U         &kp I         &kp O         &kp P           &mtb BSLH LBKT
                &kp ESC       &mtb LSHFT A  &mtb LCTRL S  &mtb LALT D   &mtb LCMD F   &kp G         &kp H         &mtb RCMD J   &mtb RALT K   &mtb RCTRL L  &mtb RSHFT SEMI &kp SQT
                &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B         &kp N         &mtb RBKT M   &kp COMMA     &kp DOT       &kp FSLH        &kp MINUS
                                                          &lt RSE TAB  &mtb LCMD SPACE &lt LWR SPACE &lt LWR SPACE &mtb RCMD BSPC &lt RSE RET
            >;
        };

        lower_layer {
            bindings = <
                &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
                &none         &kp LSHFT     &kp LCTRL     &kp LALT      &kp LCMD      &none         &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &none         &none
                &trans        &none         &none         &none         &none         &none         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &none         &trans
                                                          &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };

        raise_layer {
            bindings = <
                &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT     &kp CARET     &kp AMPS      &kp STAR      &kp LPAR      &kp RPAR      &kp LBKT         &kp RBKT
                &kp N1        &mtb LSHFT N2 &mtb LCTRL N3 &mtb LALT N4  &mtb LCMD N5  &kp N6        &kp N7        &mtb RCMD N8  &mtb RALT N9  &mtb RCTRL N0 &mtb RSHFT MINUS &kp EQUAL
                &trans        &none         &none         &none         &none         &kp LBRC      &kp RBRC      &none         &kp COMMA     &kp DOT       &kp FSLH         &trans
                                                          &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
                &kp C_BRI_DEC &kp C_BRI_INC &kp C_PIP     &none         &none         &none         &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP
                &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none
                &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &none
                                                          &trans        &trans        &trans        &trans        &trans        &trans
            >;
        };

        connection_layer {
            bindings = <
                &bootloader   &out OUT_BLE  &out OUT_USB  &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
                &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
                &sys_reset    &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4 &bt BT_DISC 4 &bt BT_DISC 3 &bt BT_DISC 2 &bt BT_DISC 1 &bt BT_DISC 0 &sys_reset
                                                          &none         &none         &none         &none         &none         &none
            >;
        };
    };
};
